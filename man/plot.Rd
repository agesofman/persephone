% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot}
\alias{plot}
\alias{plot,ProgressModel,ANY-method}
\alias{plot,ProgressModelList,ANY-method}
\title{Plot}
\usage{
plot(x, y, ...)

\S4method{plot}{ProgressModel,ANY}(
  x,
  seasons = 2002,
  cumulative = TRUE,
  save = FALSE,
  path = cronus::get_path_hermes(),
  file = "plot.pdf",
  width = 15,
  height = 8
)

\S4method{plot}{ProgressModelList,ANY}(x, y, ...)
}
\arguments{
\item{x}{an object of class \code{ProgressModel} or \code{ProgressModelList}.}

\item{y}{not used.}

\item{...}{extra arguments}

\item{seasons}{numeric. The seasons of choice to plot.}

\item{cumulative}{logical. Should the cumulative percentages be plotted?}

\item{save}{logical. Should the plot be saved?}

\item{path}{character. The directory in which the plot will be saved.}

\item{file}{character. The file name.}

\item{width}{numeric. The width of the plot in inches.}

\item{height}{numeric. The height of the plot in inches.}
}
\value{
A plot, created with \code{ggplot2} The plot is returned wrapped inside
\code{invisible()}.
}
\description{
Plot
}
\examples{
\dontrun{
# Create a Region object
library(cronus)
region <- Region(name = "nebraska", type = "us state",
                 div = c(country = "United States", state = "Nebraska"))

# Create a model
object1 <- new("ProgressBM",
               region = region,
               crop = "Corn",
               data = data_progress$Corn,
               formula = "CumPercentage ~ Time + agdd") # ProgressModel

# Create another model
object2 <- new("ProgressCLM",
               region = region,
               crop = "Soybeans",
               data = data_progress$Soybeans,
               formula = "Stage ~ Time + agdd + adayl") # ProgressModel

# Concatenate the models
object <- c(object1, object2) # ProgressModelList

# Fit
object <- fit(object)

# Plot
plot(object, cumulative = TRUE, seasons = 2002)

# Predict
predict(object, data_progress)

# Evaluate
object <- crossval(object, maxsam = 100, seed = 1)
plot_rmspe(object)

# Summarize
summary(object)

# Report
report(object, name = "example_report")
}
}
