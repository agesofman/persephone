% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict}
\alias{predict}
\alias{predict,ProgressModelList-method}
\alias{predict,ProgressBM-method}
\alias{predict,ProgressBMM-method}
\alias{predict,ProgressCLM-method}
\alias{predict,ProgressCLMM-method}
\alias{predict,ProgressSRF-method}
\alias{predict,ProgressMRF-method}
\title{Progress model prediction}
\usage{
predict(object, ...)

\S4method{predict}{ProgressModelList}(object, pdata)

\S4method{predict}{ProgressBM}(object, pdata)

\S4method{predict}{ProgressBMM}(object, pdata)

\S4method{predict}{ProgressCLM}(object, pdata)

\S4method{predict}{ProgressCLMM}(object, pdata)

\S4method{predict}{ProgressSRF}(object, pdata)

\S4method{predict}{ProgressMRF}(object, pdata)
}
\arguments{
\item{object}{an object of class \code{ProgressModel} or \code{ProgressModelList}.}

\item{...}{extra arguments.}

\item{pdata}{data.frame. The data used in model prediction.}
}
\value{
data.frame.
}
\description{
Calculate the predicted values of a model. The \code{object}, provided needs to
have already passed from \code{fit}, in order to include a \code{model} slot.
}
\examples{
\dontrun{
# Create a Region object
library(cronus)
region <- Region(name = "nebraska", type = "us state",
                 div = c(country = "United States", state = "Nebraska"))

# Create a model
object1 <- new("ProgressBM",
               region = region,
               crop = "Corn",
               data = data_progress$Corn,
               formula = "CumPercentage ~ Time + agdd") # ProgressModel

# Create another model
object2 <- new("ProgressCLM",
               region = region,
               crop = "Soybeans",
               data = data_progress$Soybeans,
               formula = "Stage ~ Time + agdd + adayl") # ProgressModel

# Concatenate the models
object <- c(object1, object2) # ProgressModelList

# Fit
object <- fit(object)

# Plot
plot(object, cumulative = TRUE, seasons = 2002)

# Predict
predict(object, data_progress)

# Evaluate
object <- evaluate(object, maxsam = 100, seed = 1)
plot_metrics(object)

# Summarize
summary(object)

# Report
report(object, name = "example_report", path = getwd())
}
}
